@model IPagedList<Video>

@{
    ViewBag.Title = "Videos";
    Layout = "~/Areas/Management/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <div class="col-xs-6">
        @using (Html.BeginForm("Words", "Config", FormMethod.Get))
        {
            <div class="input-group">
                @Html.TextBox("word", "", new { @class = "form-control" })
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        查询
                    </button>
                </span> 
            </div>
        }
    </div>

    <div class="col-xs-6 text-right">
        <a name="invokeModal" class="modal-link btn btn-primary" href="@Url.Action("Create","Videos")" role="button" data-backdrop="static">
            <span class="glyphicon glyphicon-plus-sign"></span>
            <span>新增</span>
        </a>


    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <table class="table table-bordered">
            <caption>
            </caption>
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.First().Name)</th>
                    <th>@Html.DisplayNameFor(m => m.First().Customer)</th>
                    <th>@Html.DisplayNameFor(m => m.First().CreateDate)</th>
                    <th>@Html.DisplayNameFor(m => m.First().Rank)</th>
                    <th>编辑</th>
                    <th>删除</th>
                </tr>
            </thead>
            <tbody>

                @foreach (Video item in Model)
                {
                    <tr>
                        <td class="col-xs-5">@Html.DisplayFor(x => item.Name)</td>
                        <td class="col-xs-3">@Html.DisplayFor(x => item.Customer)</td>
                        <td class="col-xs-1">
                            @Html.DisplayFor(x => item.CreateDate)
                    </td>
                    <td class="col-xs-1">@Html.DisplayFor(x => item.Rank)</td>
                    <td class="col-xs-1">
                        <a name="invokeModal" href="@Url.Action("Edit", new { id = item.Id, returnUrl = @Url.Encode(Request.RawUrl) })" role="button"><span class="glyphicon glyphicon-edit"></span></a>
                    </td>
                    <td class="col-xs-1">
                        <a name="invokeModal" href="@Url.Action("Delete", new { id = item.Id, returnUrl = @Url.Encode(Request.RawUrl) })" role="button"><span class="glyphicon glyphicon-remove"></span></a>
                    </td>

                </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="col-xs-12">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, search = ViewBag.Search }), PagedListRenderOptions.ClassicPlusFirstAndLast)
    </div>
</div>




<style>
    .modal-content {
        width: 640px !important;
        margin: 30px auto !important;
    }
</style>
<div id="modal-container" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-content">

    </div>
</div>

@section scripts{
    <script>

        $(function () {
            $("a[name=invokeModal]").click(function (e) {
                e.preventDefault();
                $(this).attr('data-target', '#modal-container');
                $(this).attr('data-toggle', 'modal');

            });

            $('body').on('click', '.modal-close-btn', function () {
                $('#modal-container').modal('hide');
            });
            $('#modal-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
            $('#CancelModal').on('click', function () {
                return false;
            });
        });

    </script>
}